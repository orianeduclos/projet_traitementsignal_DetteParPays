---
title: "Margaux"
format: html
editor: visual
---
# Introduction

Ce projet vise à sélectionner et analyser un jeu de données fonctionnelles inédit, effectuer un lissage des données si nécessaire, puis appliquer et interpréter des méthodes de statistique exploratoire telles que la moyenne, la variance, la covariance, la corrélation et l'analyse en composantes principales (ACP) fonctionnelle.

Notre étude se focalise sur la dette de divers pays dans le monde sur une période de 31 ans, allant de 1990 à 2021. La base de données initiale comprend 176 pays, mais nous avons décidé de restreindre notre analyse aux pays sans données égales à zéro, afin d'éviter tout biais. Ainsi, nous avons retenu 46 pays pour notre étude.

Le jeu de données utilisé pour cette étude peut être retrouvé à l'adresse suivante : https://www.kaggle.com/datasets/mathurinache/detteparpays

# Traitement de données 

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(fda)
library(tidyfun)
library(viridis)
library(tidyverse)
library(RColorBrewer)
```

```{r}
data <- read.csv("archive/Dette_parpays.csv", header = TRUE)
head(data)
```

```{r}
summary(data)
```

```{r}
# Suppression des colonnes 'Region' et 'Image.URL' sans utiliser dplyr
data <- data[, !(names(data) %in% c("region", "Image.URL"))]

for (colname in names(data)) {
  # Vérifie si le nom de la colonne commence par 'X' suivi de 4 chiffres
  if (grepl("^X[0-9]{4}$", colname)) {
    # Suppression des virgules et conversion en numérique
    data[[colname]] <- as.numeric(gsub(",", ".", data[[colname]]))

    # Renommage de la colonne pour enlever le 'X'
    names(data)[names(data) == colname] <- substr(colname, 2, nchar(colname))
  }
}

head(data)
```

```{r}

library(tidyr)

long_data <- pivot_longer(data, cols = -Country.Name, names_to = "Année", values_to = "Dette")

df <- pivot_wider(long_data, names_from = Country.Name, values_from = Dette)
df <- as.data.frame(df)
head(df)

# Mettre la colonne année en rownames
rownames(df) <- df$Année
head(df)

# enlever la colonne année
df <- df[, !(names(df) %in% c("Année"))]
head(df)

# enlever toutes les colonnes qui ont au moins un 0 dans la colonne
df <- df[, colSums(df == 0) == 0]
head(df)


```

# Trace de la dette de la France de 1990 à 2021

```{r}
plot(df$France, type = "l", col = "blue", xlab = "Année", ylab = "Dette", main = "Dette de la France")
```

# Reorganisation des données

```{r}
years <- 1990:2021
ndf <- cbind(years,df)
data_longer <-  ndf%>%pivot_longer(!years, names_to="pays", values_to="Dette")
head(data_longer)
```

# Statistiques descriptives

### Courbe évolutive/Boxplot

```{r}
ggplot(data_longer, aes(x=years, y=Dette, color=pays)) + geom_line() +  
  xlab("Années") +
  ylab("Dette") +
  ggtitle("Figure 1:  Dette  pour chaque pays au cours du temps ")
```

```{r}
ggplot(data = data_longer,aes(x =pays, y = Dette)) +
  geom_boxplot() +
  xlab("Pays") +
  ylab("Distribution de la variable d'intérêt")+
  coord_flip()+ 
  ggtitle("Figure 2: Boxplot comparatifs")
```

# Création de la base de Spline

```{r}
mat = data.matrix(data_longer)
```

```{r}
# FAIRE AVEC XRANGE POUR SEQ 
noeuds = c(seq(1990, 2021, 1)) 
xrange = c(1990, 2021)
```

```{r}
bspbasis = create.bspline.basis(xrange,norder=4,breaks=noeuds)
plot(bspbasis,lwd=1.5)
```

```{r}
for (colonne in names(df)) {
  df[[colonne]] <- as.numeric(df[[colonne]])
}
y=data.matrix(df)
```

```{r}
# LISSAGE SUR L'ENSEMBLE DES COURBES 
splbasis = create.bspline.basis(c(1,32),norder=4,breaks=seq(1,32,1))
gcv = 1:21
for (i in 1:21){
  lambda = exp(i-10)
  fdparTemp = fdPar(splbasis,Lfdobj = 2,lambda=lambda)
  smoothdata = smooth.basis(seq(1,32,1),y,fdParobj = fdparTemp)
  gcv[i] = mean(smoothdata$gcv)
}
plot(gcv)
which.min(gcv)
```

# Analyses exploratoires

## Ecart-type fonctionnel

On peut faire de même pour l'écart-type moyen et le mettre en relation avec l'espérance moyenne.

```{r}
sdtemp = sd.fd(smoothdata$fd) #ecart-type (objet fonctionnel fd)
```

```{r}
matplot(fhatsmooth,col="gray",type="l",xlab="jours",ylab="temperature")
fnmoy = eval.fd(xrange[1]:xrange[2],meantemp)
fnsd  = eval.fd(xrange[1]:xrange[2],sdtemp)
lines(fnmoy,lwd=2)
lines(fnmoy+2*fnsd,lwd=2,col=4,lty=2)
lines(fnmoy-2*fnsd,lwd=2,col=4,lty=2)
```

## ACP fonctionnelle

```{r}
TempACPF = pca.fd(smoothdata$fd,nharm=4,centerfns = TRUE)
TempACPF$varprop
cumsum(TempACPF$varprop)
```

On remarque que la première composante (97.3%) et la deuxieme composante (1.7%) représentent plus de 99% de la variabilité expliquée.

On peut commencer par représenter les composantes principales obtenues.

```{r}
plot(TempACPF$harmonics)
```

On constate que la courbe noire prend des valeurs positives comme ce qui est attendu en général pour cette courbe. Elle semble bien prendre la variabilité de nos individus (pays) et leurs caractéristiques communes : Une tendance à la baisse

En ce qui concerne la courbe rouge, elle est dans un premier temps négative puis positive. Elle reflète bien le changement de régime/ de comportements selon les individus.

Pour faciliter l'interprétation on peut représenter la moyenne diminuée ou augmentée des premières fonctions propres.

On peut utiliser la fonction `plot.pca.fd` pour cette représentation.

```{r}
par(mfrow=c(2,2))
plot.pca.fd(TempACPF)
```

Ici, on voit que la moyenne diminuée ou augmentée de la première fonction propre permet de retracer presque parfaitement l'allure générale de notre jeu de données. Ce n'est pas étonnant étant donné que la première composante explique plus de 97% de la variabilité de notre jeu de données. Ainsi, sans surprise, la moyenne augmentée ou diminuée des fonctions propres 2,3 ou 4 n'offre aucune plus-value utile pour l'interprétation.

### Représentation des individus dans le premier plan factoriel

On peut terminer par représenter nos individus (les pays) sur le premier plan factoriel. Afin de proposer une interprétation plus poussée, nous avons également récupéré une information liée à la présence ou non de chaque pays en tant que membre de l'OCDE (Indicateur reflétant le développement d'un pays) afin de voir si ces groupes de pays avaient des caractéristiques différentes.

```{r}
<<<<<<< HEAD
colnames(don)[1]="United Arab Emirates"
colnames(don)[9]="United Kingdom"
colnames(don)[13]="United States"

OCDE=read.csv("OCDE.csv",sep=";",header=T)
pays=data.frame(Pays=colnames(don))

info_pays=left_join(pays,OCDE,by="Pays")
info_pays[is.na(info_pays)] <- 0
```

```{r}
plot(TempACPF$scores[,1],TempACPF$scores[,2],pch=20,xlab="Axe 1", ylab="Axe 2",type="n")
pays= colnames(don)
IDH = as.factor(info_pays$Membre.de.l.OCDE)
text(TempACPF$scores[,1],TempACPF$scores[,2],labels=pays,cex=0.7,col=as.numeric(IDH))
legend("topleft",legend = levels(IDH),col=1:4,lty=1)


plot.pca.fd(TempACPF)

```

